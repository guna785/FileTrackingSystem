// <auto-generated />
using System;
using FileTrackingSystem.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FileTrackingSystem.DAL.Migrations.ApplicationDb
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("FileTrackingSystem.Models.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("ContactPersonName")
                        .HasColumnType("text");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("GSTNo")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("Pan")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<int>("clientType")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime");

                    b.Property<int>("createdBy")
                        .HasColumnType("int");

                    b.Property<string>("fatherName")
                        .HasColumnType("text");

                    b.Property<string>("idProof")
                        .HasColumnType("text");

                    b.Property<int>("idProoftype")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("BankAccNo")
                        .HasColumnType("text");

                    b.Property<string>("BankBranch")
                        .HasColumnType("text");

                    b.Property<string>("BankName")
                        .HasColumnType("text");

                    b.Property<string>("Contact")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("GST")
                        .HasColumnType("text");

                    b.Property<string>("HSN")
                        .HasColumnType("text");

                    b.Property<string>("IFSC")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Pan")
                        .HasColumnType("text");

                    b.Property<string>("TIN")
                        .HasColumnType("text");

                    b.Property<string>("Web")
                        .HasColumnType("text");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime");

                    b.Property<int>("docType")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.DocumentRequired", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime");

                    b.Property<int>("jobTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("jobTypeId");

                    b.ToTable("DocumentRequired");
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("MyProperty")
                        .HasColumnType("int");

                    b.Property<int>("PaidAmount")
                        .HasColumnType("int");

                    b.Property<int>("Tax")
                        .HasColumnType("int");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("int");

                    b.Property<int>("balanceAmount")
                        .HasColumnType("int");

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime");

                    b.Property<int>("jobId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("clientId");

                    b.HasIndex("companyId");

                    b.HasIndex("jobId")
                        .IsUnique();

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AllotedTime")
                        .HasColumnType("datetime");

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CompletedTime")
                        .HasColumnType("datetime");

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<int>("clientType")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime");

                    b.Property<int>("createdBy")
                        .HasColumnType("int");

                    b.Property<int>("jobTypeId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("clientId");

                    b.HasIndex("jobTypeId");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.JobType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime");

                    b.Property<int>("createdBy")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("JobType");
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.Notifications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime");

                    b.Property<int>("jobId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime");

                    b.Property<int>("invoiceId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("JobId");

                    b.HasIndex("invoiceId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.PendingDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime");

                    b.Property<int>("documentId")
                        .HasColumnType("int");

                    b.Property<int>("jobId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("jobId");

                    b.ToTable("PendingDocument");
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.StateCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("StateCode");
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.SubmittedDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime");

                    b.Property<int>("documentId")
                        .HasColumnType("int");

                    b.Property<int>("jobId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("jobId");

                    b.ToTable("SubmittedDocument");
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.DocumentRequired", b =>
                {
                    b.HasOne("FileTrackingSystem.Models.Models.JobType", null)
                        .WithMany("documentRequireds")
                        .HasForeignKey("jobTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.Invoice", b =>
                {
                    b.HasOne("FileTrackingSystem.Models.Models.Client", null)
                        .WithMany("Invoices")
                        .HasForeignKey("clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FileTrackingSystem.Models.Models.Company", null)
                        .WithMany("Invoices")
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FileTrackingSystem.Models.Models.Job", null)
                        .WithOne("invoice")
                        .HasForeignKey("FileTrackingSystem.Models.Models.Invoice", "jobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.Job", b =>
                {
                    b.HasOne("FileTrackingSystem.Models.Models.Client", null)
                        .WithMany("Jobs")
                        .HasForeignKey("clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FileTrackingSystem.Models.Models.JobType", null)
                        .WithMany("jobs")
                        .HasForeignKey("jobTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.Payment", b =>
                {
                    b.HasOne("FileTrackingSystem.Models.Models.Client", null)
                        .WithMany("Payments")
                        .HasForeignKey("ClientId");

                    b.HasOne("FileTrackingSystem.Models.Models.Company", null)
                        .WithMany("Payments")
                        .HasForeignKey("CompanyId");

                    b.HasOne("FileTrackingSystem.Models.Models.Job", null)
                        .WithMany("Payments")
                        .HasForeignKey("JobId");

                    b.HasOne("FileTrackingSystem.Models.Models.Invoice", null)
                        .WithMany("Payments")
                        .HasForeignKey("invoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.PendingDocument", b =>
                {
                    b.HasOne("FileTrackingSystem.Models.Models.Job", null)
                        .WithMany("PendingDocuments")
                        .HasForeignKey("jobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.SubmittedDocument", b =>
                {
                    b.HasOne("FileTrackingSystem.Models.Models.Job", null)
                        .WithMany("SubmittedDocuments")
                        .HasForeignKey("jobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.Client", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Jobs");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.Company", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.Invoice", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.Job", b =>
                {
                    b.Navigation("invoice");

                    b.Navigation("Payments");

                    b.Navigation("PendingDocuments");

                    b.Navigation("SubmittedDocuments");
                });

            modelBuilder.Entity("FileTrackingSystem.Models.Models.JobType", b =>
                {
                    b.Navigation("documentRequireds");

                    b.Navigation("jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
